buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
}

project.group = "org.telegram"

apply plugin: 'android'

apply plugin: 'crashlytics'

def basicVersion = '1.3'
def customVersionCode = '10240';

if (project.hasProperty('buildIndex')) {
    project.version = basicVersion + '.' + project.buildIndex
    customVersionCode = '' + project.buildIndex
} else {
    project.version = 'debug'
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    lintOptions {
        checkReleaseBuilds false
    }

    if (project.hasProperty("signStorage")) {
        signingConfigs {
            release {
                storeFile file(project.signStorage)
                storePassword project.signStPass
                keyAlias project.signAlias
                keyPassword project.signKePass
            }
        }

        buildTypes {
            debuggable.initWith(buildTypes.release)
            debuggable {
                signingConfig signingConfigs.release
                debuggable true
            }

            release {
                signingConfig signingConfigs.release
            }

            applicationVariants.all { variant ->
                def file = variant.outputFile
                variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
            }
        }
    }

    defaultConfig {
        versionCode Integer.valueOf(customVersionCode)
        versionName project.version

        ndk {
            moduleName "timg"
            // cppFlags "-DBSD=1 -ffast-math -O3 -funroll-loops"
            cFlags "-DANDROID_NDK " +
                    "-DDISABLE_IMPORTGL " +
                    "-w -std=gnu99 -O3 -fno-strict-aliasing -fprefetch-loop-arrays " +
                    "-DNULL=0 -DSOCKLEN_T=socklen_t -DLOCALE_NOT_USED -D_LARGEFILE_SOURCE=1 -D_FILE_OFFSET_BITS=64 " +
                    "-Drestrict='' -D__EMX__ -DOPUS_BUILD -DFIXED_POINT -DUSE_ALLOCA -DHAVE_LRINT -DHAVE_LRINTF -fno-math-errno "
            "-DAVOID_TABLES " +
                    "-DANDROID_TILE_BASED_DECODE " +
                    "-DANDROID_ARMV6_IDCT"
            ldLibs "log", "jnigraphics", "m"
            stl "stlport_static"
        }
    }
}

dependencies {
    // Android basic dependencies
    compile "com.nineoldandroids:library:2.4.0"
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.google.android.gms:play-services:4.0.+'
    compile 'se.emilsjolander:stickylistheaders:2.1.3'
    compile 'de.greenrobot:greendao:1.3.+'
    compile 'com.googlecode.mp4parser:isoparser:1.0-RC-27'
    compile 'com.crashlytics.android:crashlytics:1.+'

    // Telegram api
    compile project(':actors')
    compile project(':tl-core')
    compile project(':mtproto')
    compile files('../libraries/telegram-api/libs/tl-api-v12.jar')
    compile project(':telegram-api')

    // Ui dependencies
    compile project(':ui:cropping')
    compile project(':ui:pageindicator')
    compile project(':ui:photoview')

    // Jars
    compile files('libs/libGoogleAnalyticsServices.jar')
    compile files('libs/libphonenumber-5.9.jar')
    compile files('libs/HockeySDK-3.0.1.jar')
}

task lightDist(dependsOn: ['assembleCommonRelease', 'assembleBetaRelease', 'assembleHockeyDebuggable', 'assembleHockeytestDebuggable']) << {
}